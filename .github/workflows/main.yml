name: Build to proxy
on:
  push:
    tags:
      - "v*"
      - "t*"

jobs:
  deploy:
    runs-on: tech_cloud

    steps:
      - uses: actions/checkout@v4

      - name: Build
        run: |
          npm install
          npm run build
      - name: Copy to standalone
        run: |
          Remove-Item C:/inetpub/wwwroot/EcomKomex/standalone/public -Recurse -Force
          Copy-Item ./public C:/inetpub/wwwroot/EcomKomex/standalone/public -Recurse -Force
          Remove-Item C:/inetpub/wwwroot/EcomKomex/standalone/.next -Recurse -Force
          Copy-Item ./.next/standalone/.next C:/inetpub/wwwroot/EcomKomex/standalone/.next -Recurse -Force
          Copy-Item ./.next/static C:/inetpub/wwwroot/EcomKomex/standalone/.next/static -Recurse -Force
          Remove-Item C:/inetpub/wwwroot/EcomKomex/standalone/package.json -Force
          Copy-Item ./.next/standalone/package.json C:/inetpub/wwwroot/EcomKomex/standalone/package.json -Force
          Remove-Item C:/inetpub/wwwroot/EcomKomex/standalone/node_modules -Recurse -Force
          Copy-Item ./.next/standalone/node_modules C:/inetpub/wwwroot/EcomKomex/standalone/node_modules -Recurse -Force
      - name: Kill existing Node.js process
        run: |
          $targetPath = "C:/inetpub/wwwroot/EcomKomex/standalone"
          $processes = Get-WmiObject Win32_Process -Filter "Name = 'node.exe'"
      
          foreach ($process in $processes) {
              if ($process.CommandLine -like "*$targetPath*") {
                  Write-Host "Killing Node.js process with PID: $($process.ProcessId)"
                  Stop-Process -Id $process.ProcessId -Force
              }
          }
      - name: Restart IIS website EcomKomex
        run: |
          # Restart IIS website using appcmd
          & "C:\Windows\System32\inetsrv\appcmd.exe" stop site /site.name:"EcomKomex"
          Start-Sleep -Seconds 5
          & "C:\Windows\System32\inetsrv\appcmd.exe" start site /site.name:"EcomKomex"
